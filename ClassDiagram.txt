@startuml
class Unity.MonoBehaviour
class Unity.ScriptableObject

class GameManager {
+void Update()
+void FixedUpdate()
+void RegisterBasicObject(BasicObject _object)
}

class InputManager {
-Dictionary<KeyCode, List<ICommand>> keyBindings
+void RegisterKeyBinding(KeyCode _keyCode, ICommand _command)
}

interface ICommand {
+void Execute()
}

abstract BasicObject {
BasicObject(GameManager _gameManager)
+void Update()
+void FixedUpdate()
}

class PrefabLibrary {
+bool hasPrefab(String _name)
+GameObject getPrefab(String _name)
+GameObject instantiatePrefab(String _name)
}

struct PrefabReference {
+String name
+GameObject prefab
}

interface ISceneBuilder {
+void BuildScene(GameManager _gameManager)
}

Unity.MonoBehaviour <|-- GameManager
PrefabLibrary *-- GameManager
PrefabReference "0..*" *-- PrefabLibrary
Unity.ScriptableObject <|-- PrefabLibrary
InputManager *-- GameManager
ISceneBuilder *-- GameManager
ICommand "0..*" -- InputManager
GameManager "1" *-- "0..*" BasicObject



class BaseBuilding.BaseBuildingManager #ddccff {
BaseBuildingManager(GameManager _gameManager)
}

class BaseBuilding.HologramStructure #ddccff {
+virtual void PositionStructure()
}

BasicObject <|-- BaseBuilding.BaseBuildingManager
BasicObject <|-- BaseBuilding.HologramStructure
@enduml